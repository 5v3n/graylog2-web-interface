<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
  <title>Dashboard</title>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <%= stylesheet_link_tag "reset" %>
  <%= stylesheet_link_tag "dashboard" %>
  <%= stylesheet_link_tag "messages" %>
  <%= javascript_include_tag "jquery-1.4.2.min" %>
  <%= javascript_include_tag "jquery-ui-1.8.4.custom.min" %>
  <%= javascript_include_tag "dashboard" %>

  <script type="text/javascript">
    $(document).ready(function(){
      var requests = new Array(3);
      requests[0] = '<%= ActiveSupport::JSON::encode({ :type => "status", :interval => Setting.get_message_count_interval(current_user), :maximum => Setting.get_message_max_count(current_user) }) %>';
      requests[1] = '<%= ActiveSupport::JSON::encode({ :type => "lastmessage" }) %>';
      requests[2] = '<%= ActiveSupport::JSON::encode({ :type => "messagecount", :interval => Setting.get_message_count_interval(current_user) }) %>';

      ws = new WebSocket("ws://127.0.0.1:8080");
      ws.onmessage = function(evt) {
        message = $.parseJSON(evt.data);
        switch(message.t) {
          case "status":
            updateStatus(message.m);
            break;
          case "lastmessage":
            updateLastMessage(message.m);
            break;
          case "messagecount":
            updateMessageCount(message.m);
            break;
          case "system":
            alert("SYSTEM:" + message.m);
        }
      };

      ws.onclose = function() { alert("socket closed"); };

      ws.onopen = function() {
        setInterval(function() { sendRequests(ws) }, 500)
      };

      function sendRequests(socket) {
        for (var i = 0; i < requests.length; i++) {
          socket.send(requests[i])
        }
      }

      function updateLastMessage(message) {
        lastMessage = $("#lastmessage");
        if(lastMessage.html() != message) {
          lastMessage.html(message);
          lastMessage.effect("highlight", {}, 250);
        }
      }

      function updateMessageCount(message) {
        messageCount = $("#messagecount");
        newCount = parseInt(message);
        oldCount = parseInt(messageCount.html());
        if (oldCount != newCount) {
          messageCount.html(newCount);
          if (newCount > oldCount) {
            countDirection = "up";
          } else {
            countDirection = "down";
          }

          $("#status").stop(true, true).effect("bounce", { times: 1, direction: countDirection });
        }
      }

      function updateStatus(message) {
          status = parseInt(message);
          oldStatus = $("#statuscontainer").attr('class') == "status-problems" ? 0 : 1;
          if (status != oldStatus) {
            if (status == 1) {
              $("#statuscontainer").switchClass('status-problems', 'status-okay', 0);
            } else {
              $("#statuscontainer").switchClass('status-okay', 'status-problems', 0);
            }
          }
      }
    });
  </script>
</head>
<body>
  <% message_count_interval = Setting.get_message_count_interval(current_user) %>

  <div id="top">
    <% if File.exist?(RAILS_ROOT + "/public/images/dashboard_logo.png") %>
        <%= image_tag('dashboard_logo.png') %>
    <% end %>
    <div id="top-timestamp">
      <%= Time.now %>
    </div>
  </div>

  <div id="statuscontainer" class="status-<%=h Message.count_of_last_minutes(message_count_interval) > Setting.get_message_max_count(current_user) ? 'problems' : 'okay' %>">
    <div id="status">
      <% count = Message.count_of_last_minutes(message_count_interval).to_i %>
      <h1><span id="messagecount"><%= count %></span> messages / <%=h message_count_interval %> minute<%= message_count_interval == 1 ? '' : 's'  %></h1>
    </div>
  </div>

  <div id="lastmessage"></div>

  <div id="content">
    <%= yield %>
  </div>

</body>
</html>